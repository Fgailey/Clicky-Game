{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\foste\\\\trilogy\\\\class-content\\\\homework\\\\clicky-game\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport Navbar from './components/Navbar';\nimport Scorebar from './components/Scorebar';\nimport Cards from './components/Cards';\nimport chars from './chars.json';\nlet clickedMessage = \"Click a card to start, dont click the same card twice!!\";\nlet highScore = 0;\nlet correctGuess = 0;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chars,\n      clickedMessage,\n      highScore,\n      correctGuess\n    };\n\n    this.clicker = id => {\n      const chars = this.state.chars;\n      const currentChar = chars.filter(char => char.id === id); //clickedChar is an array with only the most recent char inside it\n      //if the card property clicked is true then the user will lose\n\n      if (currentChar[0].clicked) {\n        console.log(\"you lose\");\n        clickedMessage = \"Oh No you Lose!, Better luck next time!\";\n        correctGuess = 0; //reset all clicked cards to false\n\n        chars.forEach(char => char.clicked = false);\n        this.setState({\n          clickedMessage\n        });\n        this.setState({\n          correctGuess\n        });\n        this.setState({\n          chars\n        });\n      } //if the correct guess count has not reached the max then continue the game\n      else if (correctGuess < 11) {\n          console.log(\"right\");\n          currentChar[0].clicked = true;\n          clickedMessage = \"Nice guess, keep it going\";\n          correctGuess++;\n\n          if (highScore < correctGuess) {\n            highScore = correctGuess;\n          } //sorts the array so the images chang order every click\n\n\n          chars.sort((a, b) => 0.5 - Math.random());\n          this.setState({\n            highScore\n          });\n          this.setState({\n            clickedMessage\n          });\n          this.setState({\n            correctGuess\n          });\n          this.setState({\n            chars\n          });\n        } //once the game has been won, announce win and reset the game\n        else {\n            console.log(\"win\");\n            clickedMessage = \"CONGRATS YOU GOT THEM ALL RIGHT!!!, Now can you do it again?\";\n            correctGuess = 0;\n            highScore = 12;\n            chars.forEach(char => char.clicked = false);\n            this.setState({\n              correctGuess\n            });\n            this.setState({\n              clickedMessage\n            });\n            this.setState({\n              highScore\n            });\n            this.setState({\n              chars\n            });\n          }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Scorebar, {\n      clickedMessage: this.state.clickedMessage,\n      highScore: this.state.highScore,\n      correctGuess: this.state.correctGuess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.chars.map(char => React.createElement(Cards, {\n      key: char.id,\n      id: char.id,\n      name: char.name,\n      image: char.image,\n      clicked: char.clicked,\n      clicker: this.clicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/foste/trilogy/class-content/homework/clicky-game/src/App.js"],"names":["React","Component","Navbar","Scorebar","Cards","chars","clickedMessage","highScore","correctGuess","App","state","clicker","id","currentChar","filter","char","clicked","console","log","forEach","setState","sort","a","b","Math","random","render","map","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport Navbar from './components/Navbar'\nimport Scorebar from './components/Scorebar';\nimport Cards from './components/Cards';\nimport chars from './chars.json'\n\n\nlet clickedMessage = \"Click a card to start, dont click the same card twice!!\";\nlet highScore = 0;\nlet correctGuess = 0;\nclass App extends Component {\n  state = {\n    chars,\n    clickedMessage,\n    highScore,\n    correctGuess\n    \n};\n//this function will be called when one of the cards is clicked  \nclicker = id =>{\n  const chars = this.state.chars\n  \n  const currentChar = chars.filter(char => char.id === id)\n\n  //clickedChar is an array with only the most recent char inside it\n  //if the card property clicked is true then the user will lose\n  if (currentChar[0].clicked){\n    console.log(\"you lose\")\n\n    clickedMessage = \"Oh No you Lose!, Better luck next time!\"\n\n    correctGuess = 0\n\n    //reset all clicked cards to false\n    chars.forEach(char => char.clicked = false);\n\n\n    this.setState({clickedMessage})\n    this.setState({correctGuess})\n    this.setState({chars})\n    \n  }\n  //if the correct guess count has not reached the max then continue the game\n  else if(correctGuess < 11){\n    console.log(\"right\")\n    currentChar[0].clicked = true;\n    \n    clickedMessage = \"Nice guess, keep it going\"\n\n    correctGuess++\n\n\n    if (highScore < correctGuess){\n      highScore = correctGuess\n    }\n\n    //sorts the array so the images chang order every click\n    chars.sort((a,b)=> 0.5 - Math.random())\n\n\n    this.setState({highScore})\n    this.setState({clickedMessage})\n    this.setState({correctGuess})\n    this.setState({chars})\n  }\n  //once the game has been won, announce win and reset the game\n  else{\n    console.log(\"win\")\n    \n    clickedMessage = \"CONGRATS YOU GOT THEM ALL RIGHT!!!, Now can you do it again?\"\n  \n    correctGuess = 0\n\n    highScore = 12\n\n    chars.forEach(char => char.clicked = false);\n\n\n    this.setState({correctGuess})\n    this.setState({clickedMessage})\n    this.setState({highScore})\n    this.setState({chars})\n  }\n\n  }\n  render(){\n    return (\n      <div className=\"background\">\n        <div className=\"container-fluid\">\n\n        <Navbar />\n        <Scorebar \n          clickedMessage={this.state.clickedMessage}\n          highScore={this.state.highScore}\n          correctGuess={this.state.correctGuess}\n          />\n          </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            {\n              this.state.chars.map(char => (\n                <Cards  \n                key={char.id} \n                id={char.id} \n                name={char.name}\n                image={char.image}\n                clicked={char.clicked}\n                clicker={this.clicker}\n                />)\n              )\n            }\n          </div>\n        </div>\n\n      </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}